[
{
"@id": "",
"@type": [
"doc:Document",
"doc:Fragment",
"doc:Module",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#61",
"@type": [
"schema-org:WebAPI",
"doc:RootDomainElement",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "mule-template"
}
],
"raml-http:server": [
{
"@id": "#198",
"@type": [
"raml-http:Server",
"doc:DomainElement"
],
"raml-http:url": [
{
"@value": "http://mule-deve.canda.biz:24030/api"
}
],
"sourcemaps:sources": [
{
"@id": "#198/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:url"
}
],
"sourcemaps:value": [
{
"@value": "[(8,0)-(10,0)]"
}
]
}
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "amf://id#198"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
]
}
]
}
],
"schema-org:version": [
{
"@value": "api"
}
],
"schema-org:documentation": [
{
"@id": "#199",
"@type": [
"schema-org:CreativeWork",
"doc:DomainElement"
],
"schema-org:title": [
{
"@value": "Home"
}
],
"schema-org:description": [
{
"@value": "Welcome to the **Mule Template API** Documentation. The Mule Template API allows you to connect your application to some simple endpoints that illustrate the design of a Web-based API.\n"
}
],
"sourcemaps:sources": [
{
"@id": "#199/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(5,3)-(7,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#199"
}
],
"sourcemaps:value": [
{
"@value": "[(4,3)-(7,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:title"
}
],
"sourcemaps:value": [
{
"@value": "[(4,3)-(5,0)]"
}
]
}
]
}
]
}
],
"raml-http:endpoint": [
{
"@id": "#62",
"@type": [
"raml-http:EndPoint",
"doc:DomainElement"
],
"raml-http:path": [
{
"@value": "/greetings"
}
],
"schema-org:description": [
{
"@value": "The greetings resource contains only a simple message. The message text might be customized by passing a query parameter."
}
],
"hydra:supportedOperation": [
{
"@id": "#63",
"@type": [
"hydra:Operation",
"doc:DomainElement"
],
"hydra:method": [
{
"@value": "get"
}
],
"schema-org:description": [
{
"@value": "Answers a collection of three simple greetings."
}
],
"hydra:returns": [
{
"@id": "#64",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "200"
}
],
"hydra:statusCode": [
{
"@value": "200"
}
],
"raml-http:payload": [
{
"@id": "#65",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#66",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#67",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#greetings"
}
],
"raml-shapes:range": [
{
"@id": "#68",
"@type": [
"raml-shapes:ArrayShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"raml-shapes:items": [
{
"@id": "#69",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": false
}
],
"shacl:property": [
{
"@id": "#70",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#id"
}
],
"raml-shapes:range": [
{
"@id": "#71",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:minLength": [
{
"@value": 36
}
],
"shacl:maxLength": [
{
"@value": 36
}
],
"shacl:name": [
{
"@value": "id"
}
],
"schema-org:description": [
{
"@value": "The ID of the representation, a randomly generated UUID."
}
],
"sourcemaps:sources": [
{
"@id": "#71/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#71"
}
],
"sourcemaps:value": [
{
"@value": "[(21,6)-(21,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(24,6)-(24,21)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:minLength"
}
],
"sourcemaps:value": [
{
"@value": "[(22,6)-(22,19)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#71"
}
],
"sourcemaps:value": [
{
"@value": "[(20,5)-(20,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(21,6)-(21,14)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:maxLength"
}
],
"sourcemaps:value": [
{
"@value": "[(23,6)-(23,19)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "id"
}
],
"sourcemaps:sources": [
{
"@id": "#70/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(16,5)-(16,9)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#70"
}
],
"sourcemaps:value": [
{
"@value": "[(20,5)-(20,11)]"
}
]
}
]
}
]
},
{
"@id": "#72",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#message"
}
],
"raml-shapes:range": [
{
"@id": "#73",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "message"
}
],
"schema-org:description": [
{
"@value": "The text of the message."
}
],
"sourcemaps:sources": [
{
"@id": "#73/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#73"
}
],
"sourcemaps:value": [
{
"@value": "[(27,6)-(27,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(28,6)-(28,21)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#73"
}
],
"sourcemaps:value": [
{
"@value": "[(26,5)-(26,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(27,6)-(27,14)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "message"
}
],
"sourcemaps:sources": [
{
"@id": "#72/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(17,5)-(17,14)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#72"
}
],
"sourcemaps:value": [
{
"@value": "[(26,5)-(26,16)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "items"
}
],
"sourcemaps:sources": [
{
"@id": "#69/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#69"
}
],
"sourcemaps:value": [
{
"@value": "[(14,4)-(14,10)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#69"
}
],
"sourcemaps:value": [
{
"@value": "[(13,3)-(13,12)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "greetings"
}
],
"schema-org:description": [
{
"@value": "Holds the collection of simple messages."
}
],
"sourcemaps:sources": [
{
"@id": "#68/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#68"
}
],
"sourcemaps:value": [
{
"@value": "[(11,3)-(11,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#68"
}
],
"sourcemaps:value": [
{
"@value": "[(10,2)-(10,15)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "greetings"
}
],
"sourcemaps:sources": [
{
"@id": "#67/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(7,2)-(7,13)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#67"
}
],
"sourcemaps:value": [
{
"@value": "[(10,2)-(10,15)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Describes a collection of 0..n simple message representations consisting of an ID and a text."
}
],
"doc:examples": [
{
"@id": "#74",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#74",
"@type": [
"data:Object"
],
"data:greetings": [
{
"@id": "#75",
"@type": [
"data:Array",
"rdf:Seq"
],
"rdf:member": [
{
"@id": "#76",
"@type": [
"data:Object"
],
"data:id": [
{
"@id": "#77",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "1568b2db-9e2f-4025-b7ae-05301901d362",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#77/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#77"
}
],
"sourcemaps:value": [
{
"@value": "[(3,8)-(3,46)]"
}
]
}
]
}
]
}
],
"data:message": [
{
"@id": "#78",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Enjoy this wonderful day while the sun is shining on the autumn leaves.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#78/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#78"
}
],
"sourcemaps:value": [
{
"@value": "[(4,13)-(4,86)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#76/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#76"
}
],
"sourcemaps:value": [
{
"@value": "message->[(4,2)-(4,13)]#id->[(3,2)-(3,8)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#76"
}
],
"sourcemaps:value": [
{
"@value": "[(2,15)-(5,3)]"
}
]
}
]
}
]
},
{
"@id": "#79",
"@type": [
"data:Object"
],
"data:id": [
{
"@id": "#80",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "0bde5b56-bad6-4ed8-9ac6-355587761610",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#80/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#80"
}
],
"sourcemaps:value": [
{
"@value": "[(7,8)-(7,46)]"
}
]
}
]
}
]
}
],
"data:message": [
{
"@id": "#81",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Can you hear the waves? Most amazing sound I've ever heard.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#81/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#81"
}
],
"sourcemaps:value": [
{
"@value": "[(8,13)-(8,74)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#79/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#79"
}
],
"sourcemaps:value": [
{
"@value": "message->[(8,2)-(8,13)]#id->[(7,2)-(7,8)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#79"
}
],
"sourcemaps:value": [
{
"@value": "[(6,2)-(9,6)]"
}
]
}
]
}
]
},
{
"@id": "#82",
"@type": [
"data:Object"
],
"data:id": [
{
"@id": "#83",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "57b5673e-73f0-4512-bca1-5255dc6f25b5",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#83/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#83"
}
],
"sourcemaps:value": [
{
"@value": "[(11,8)-(11,46)]"
}
]
}
]
}
]
}
],
"data:message": [
{
"@id": "#84",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Mindfulness is one of the secrets for a happy life.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#84/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#84"
}
],
"sourcemaps:value": [
{
"@value": "[(12,13)-(12,66)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#82/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#82"
}
],
"sourcemaps:value": [
{
"@value": "message->[(12,2)-(12,13)]#id->[(11,2)-(11,8)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#82"
}
],
"sourcemaps:value": [
{
"@value": "[(10,2)-(13,6)]"
}
]
}
]
}
]
}
],
"data:pos0": [
{
"@id": "#76"
}
],
"data:pos1": [
{
"@id": "#79"
}
],
"data:pos2": [
{
"@id": "#82"
}
],
"sourcemaps:sources": [
{
"@id": "#75/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#75"
}
],
"sourcemaps:value": [
{
"@value": "[(2,14)-(14,2)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#74/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#74"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"greetings\": [{\n\t\t\"id\": \"1568b2db-9e2f-4025-b7ae-05301901d362\",\n\t\t\"message\": \"Enjoy this wonderful day while the sun is shining on the autumn leaves.\"\n\t\t},\n\t\t{\n\t\t\"id\": \"0bde5b56-bad6-4ed8-9ac6-355587761610\",\n\t\t\"message\": \"Can you hear the waves? Most amazing sound I've ever heard.\"\n    \t},\n\t\t{\n\t\t\"id\": \"57b5673e-73f0-4512-bca1-5255dc6f25b5\",\n\t\t\"message\": \"Mindfulness is one of the secrets for a happy life.\"\n    \t}\n\t]\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#74"
}
],
"sourcemaps:value": [
{
"@value": "greetings->[(2,1)-(2,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#74"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(15,1)]"
}
]
}
]
}
]
}
],
"doc:reference-id": [
{
"@id": "#10"
}
],
"sourcemaps:sources": [
{
"@id": "#74/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#74"
}
],
"sourcemaps:value": [
{
"@value": "[(23,21)-(23,56)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#74"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#65"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#66/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#66"
}
],
"sourcemaps:value": [
{
"@value": "{\r\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n\t\"description\": \"Describes a collection of 0..n simple message representations consisting of an ID and a text.\",\r\n\t\"additionalProperties\": false,\r\n\t\"type\": \"object\",\r\n\t\"required\": [\r\n\t\t\"greetings\"\r\n\t],\r\n\t\"properties\": {\r\n\t\t\"greetings\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"description\": \"Holds the collection of simple messages.\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"required\": [\r\n\t\t\t\t\t\"id\",\r\n\t\t\t\t\t\"message\"\r\n\t\t\t\t],\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"minLength\": 36,\r\n\t\t\t\t\t\t\"maxLength\": 36,\r\n\t\t\t\t\t\t\"description\": \"The ID of the representation, a randomly generated UUID.\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"message\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"The text of the message.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(3,1)-(3,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#66"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(34,1)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(4,1)-(4,25)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#66"
}
],
"sourcemaps:value": [
{
"@value": "[(5,1)-(5,7)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#65/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#65"
}
],
"sourcemaps:value": [
{
"@value": "[(22,10)-(25,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#64/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(21,8)-(25,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#64"
}
],
"sourcemaps:value": [
{
"@value": "[(20,6)-(25,0)]"
}
]
}
]
}
]
},
{
"@id": "#85",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "204"
}
],
"schema-org:description": [
{
"@value": "The response does not contain any content."
}
],
"hydra:statusCode": [
{
"@value": "204"
}
],
"sourcemaps:sources": [
{
"@id": "#85/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(26,8)-(27,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#85"
}
],
"sourcemaps:value": [
{
"@value": "[(25,6)-(27,0)]"
}
]
}
]
}
]
}
],
"security:security": [
{
"@id": "#86",
"@type": [
"security:ParametrizedSecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "candaCommons.basicAuth"
}
],
"security:scheme": [
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#86/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#86"
}
],
"sourcemaps:value": [
{
"@value": "[(13,12)-(13,34)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#63/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:returns"
}
],
"sourcemaps:value": [
{
"@value": "[(19,4)-(27,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#63"
}
],
"sourcemaps:value": [
{
"@value": "[(17,2)-(27,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(18,4)-(19,0)]"
}
]
}
]
}
]
},
{
"@id": "#87",
"@type": [
"hydra:Operation",
"doc:DomainElement"
],
"hydra:method": [
{
"@value": "put"
}
],
"schema-org:description": [
{
"@value": "Creates a representation of a simple greeting message. This is a pseudo operation, the API does not store the representation in any way."
}
],
"hydra:expects": [
{
"@id": "#88",
"@type": [
"raml-http:Request",
"doc:DomainElement"
],
"raml-http:payload": [
{
"@id": "#89",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#90",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#91",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#id"
}
],
"raml-shapes:range": [
{
"@id": "#92",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:minLength": [
{
"@value": 36
}
],
"shacl:maxLength": [
{
"@value": 36
}
],
"shacl:name": [
{
"@value": "id"
}
],
"schema-org:description": [
{
"@value": "The ID of the representation, a randomly generated UUID."
}
],
"sourcemaps:sources": [
{
"@id": "#92/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#92"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(15,3)-(15,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:minLength"
}
],
"sourcemaps:value": [
{
"@value": "[(13,3)-(13,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#92"
}
],
"sourcemaps:value": [
{
"@value": "[(11,2)-(11,8)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:maxLength"
}
],
"sourcemaps:value": [
{
"@value": "[(14,3)-(14,16)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "id"
}
],
"sourcemaps:sources": [
{
"@id": "#91/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(7,2)-(7,6)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#91"
}
],
"sourcemaps:value": [
{
"@value": "[(11,2)-(11,8)]"
}
]
}
]
}
]
},
{
"@id": "#93",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#message"
}
],
"raml-shapes:range": [
{
"@id": "#94",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "message"
}
],
"schema-org:description": [
{
"@value": "The text message of the greeting."
}
],
"sourcemaps:sources": [
{
"@id": "#94/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#94"
}
],
"sourcemaps:value": [
{
"@value": "[(18,3)-(18,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(19,3)-(19,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#94"
}
],
"sourcemaps:value": [
{
"@value": "[(17,2)-(17,13)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(18,3)-(18,11)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "message"
}
],
"sourcemaps:sources": [
{
"@id": "#93/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(8,2)-(8,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#93"
}
],
"sourcemaps:value": [
{
"@value": "[(17,2)-(17,13)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Describes simple greeting representation consisting of an ID and a message."
}
],
"doc:examples": [
{
"@id": "#95",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#95",
"@type": [
"data:Object"
],
"data:id": [
{
"@id": "#96",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "82157f46-887e-4907-b7c6-06278b3b9ea1",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#96/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#96"
}
],
"sourcemaps:value": [
{
"@value": "[(2,7)-(2,45)]"
}
]
}
]
}
]
}
],
"data:message": [
{
"@id": "#97",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Welcome and thanks for your request, mike.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#97/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#97"
}
],
"sourcemaps:value": [
{
"@value": "[(3,12)-(3,56)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#95/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#95"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"id\": \"82157f46-887e-4907-b7c6-06278b3b9ea1\",\n\t\"message\": \"Welcome and thanks for your request, mike.\"\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#95"
}
],
"sourcemaps:value": [
{
"@value": "message->[(3,1)-(3,12)]#id->[(2,1)-(2,7)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#95"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(4,1)]"
}
]
}
]
}
]
}
],
"doc:reference-id": [
{
"@id": "#4"
}
],
"sourcemaps:sources": [
{
"@id": "#95/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#95"
}
],
"sourcemaps:value": [
{
"@value": "[(31,17)-(31,51)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#95"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#89"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#90/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#90"
}
],
"sourcemaps:value": [
{
"@value": "{\r\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n\t\"description\": \"Describes simple greeting representation consisting of an ID and a message.\",\r\n\t\"additionalProperties\": false,\r\n\t\"type\": \"object\",\r\n\t\"required\": [\r\n\t\t\"id\",\r\n\t\t\"message\"\r\n\t],\r\n\t\"properties\": {\r\n\t\t\"id\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"minLength\": 36,\r\n\t\t\t\"maxLength\": 36,\r\n\t\t\t\"description\": \"The ID of the representation, a randomly generated UUID.\"\r\n\t\t},\r\n\t\t\"message\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The text message of the greeting.\"\r\n\t\t}\r\n\t}\r\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(3,1)-(3,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#90"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(30,22)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(4,1)-(4,25)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#90"
}
],
"sourcemaps:value": [
{
"@value": "[(5,1)-(5,7)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#89/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#89"
}
],
"sourcemaps:value": [
{
"@value": "[(30,6)-(33,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#88/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(29,4)-(33,0)]"
}
]
}
]
}
]
}
],
"hydra:returns": [
{
"@id": "#98",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "201"
}
],
"hydra:statusCode": [
{
"@value": "201"
}
],
"raml-http:payload": [
{
"@id": "#99",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#100",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#91",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#id"
}
],
"raml-shapes:range": [
{
"@id": "#92",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:minLength": [
{
"@value": 36
}
],
"shacl:maxLength": [
{
"@value": 36
}
],
"shacl:name": [
{
"@value": "id"
}
],
"schema-org:description": [
{
"@value": "The ID of the representation, a randomly generated UUID."
}
],
"sourcemaps:sources": [
{
"@id": "#92/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#92"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(15,3)-(15,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:minLength"
}
],
"sourcemaps:value": [
{
"@value": "[(13,3)-(13,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#92"
}
],
"sourcemaps:value": [
{
"@value": "[(11,2)-(11,8)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:maxLength"
}
],
"sourcemaps:value": [
{
"@value": "[(14,3)-(14,16)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "id"
}
],
"sourcemaps:sources": [
{
"@id": "#91/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(7,2)-(7,6)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#91"
}
],
"sourcemaps:value": [
{
"@value": "[(11,2)-(11,8)]"
}
]
}
]
}
]
},
{
"@id": "#93",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#message"
}
],
"raml-shapes:range": [
{
"@id": "#94",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "message"
}
],
"schema-org:description": [
{
"@value": "The text message of the greeting."
}
],
"sourcemaps:sources": [
{
"@id": "#94/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#94"
}
],
"sourcemaps:value": [
{
"@value": "[(18,3)-(18,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(19,3)-(19,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#94"
}
],
"sourcemaps:value": [
{
"@value": "[(17,2)-(17,13)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(18,3)-(18,11)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "message"
}
],
"sourcemaps:sources": [
{
"@id": "#93/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(8,2)-(8,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#93"
}
],
"sourcemaps:value": [
{
"@value": "[(17,2)-(17,13)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Describes simple greeting representation consisting of an ID and a message."
}
],
"doc:examples": [
{
"@id": "#101",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#101",
"@type": [
"data:Object"
],
"data:id": [
{
"@id": "#102",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "82157f46-887e-4907-b7c6-06278b3b9ea1",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#102/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#102"
}
],
"sourcemaps:value": [
{
"@value": "[(2,7)-(2,45)]"
}
]
}
]
}
]
}
],
"data:message": [
{
"@id": "#103",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Welcome and thanks for your request, mike.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#103/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#103"
}
],
"sourcemaps:value": [
{
"@value": "[(3,12)-(3,56)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#101/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#101"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"id\": \"82157f46-887e-4907-b7c6-06278b3b9ea1\",\n\t\"message\": \"Welcome and thanks for your request, mike.\"\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#101"
}
],
"sourcemaps:value": [
{
"@value": "message->[(3,1)-(3,12)]#id->[(2,1)-(2,7)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#101"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(4,1)]"
}
]
}
]
}
]
}
],
"doc:reference-id": [
{
"@id": "#4"
}
],
"sourcemaps:sources": [
{
"@id": "#101/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#101"
}
],
"sourcemaps:value": [
{
"@value": "[(37,21)-(37,55)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#101"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#99"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#100/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#100"
}
],
"sourcemaps:value": [
{
"@value": "{\r\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n\t\"description\": \"Describes simple greeting representation consisting of an ID and a message.\",\r\n\t\"additionalProperties\": false,\r\n\t\"type\": \"object\",\r\n\t\"required\": [\r\n\t\t\"id\",\r\n\t\t\"message\"\r\n\t],\r\n\t\"properties\": {\r\n\t\t\"id\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"minLength\": 36,\r\n\t\t\t\"maxLength\": 36,\r\n\t\t\t\"description\": \"The ID of the representation, a randomly generated UUID.\"\r\n\t\t},\r\n\t\t\"message\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The text message of the greeting.\"\r\n\t\t}\r\n\t}\r\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(3,1)-(3,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#100"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(30,22)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(4,1)-(4,25)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#100"
}
],
"sourcemaps:value": [
{
"@value": "[(5,1)-(5,7)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#99/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#99"
}
],
"sourcemaps:value": [
{
"@value": "[(36,10)-(39,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#98/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(35,8)-(39,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#98"
}
],
"sourcemaps:value": [
{
"@value": "[(34,6)-(39,0)]"
}
]
}
]
}
]
}
],
"security:security": [
{
"@id": "#86",
"@type": [
"security:ParametrizedSecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "candaCommons.basicAuth"
}
],
"security:scheme": [
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#86/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#86"
}
],
"sourcemaps:value": [
{
"@value": "[(13,12)-(13,34)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#87/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:returns"
}
],
"sourcemaps:value": [
{
"@value": "[(33,4)-(39,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#87"
}
],
"sourcemaps:value": [
{
"@value": "[(27,2)-(39,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(28,4)-(29,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#62/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(16,2)-(17,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#62"
}
],
"sourcemaps:value": [
{
"@value": "[(15,0)-(60,0)]"
}
]
}
]
}
]
},
{
"@id": "#104",
"@type": [
"raml-http:EndPoint",
"doc:DomainElement"
],
"raml-http:path": [
{
"@value": "/greetings/{name}"
}
],
"schema-org:description": [
{
"@value": "Responds with a greeting a for the given 'name'."
}
],
"hydra:supportedOperation": [
{
"@id": "#105",
"@type": [
"hydra:Operation",
"doc:DomainElement"
],
"hydra:method": [
{
"@value": "get"
}
],
"schema-org:description": [
{
"@value": "Answers a greeting representation for the given 'name'."
}
],
"hydra:expects": [
{
"@id": "#106",
"@type": [
"raml-http:Request",
"doc:DomainElement"
],
"raml-http:parameter": [
{
"@id": "#107",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "message"
}
],
"raml-http:paramName": [
{
"@value": "message"
}
],
"schema-org:description": [
{
"@value": "Pass a message which should be used by the response."
}
],
"hydra:required": [
{
"@value": false
}
],
"raml-http:binding": [
{
"@value": "query"
}
],
"raml-http:schema": [
{
"@id": "#108",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:name": [
{
"@value": "message"
}
],
"schema-org:description": [
{
"@value": "Pass a message which should be used by the response."
}
],
"doc:examples": [
{
"@id": "#109",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#109",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Hi, Dude",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#109/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#109"
}
],
"sourcemaps:value": [
{
"@value": "[(53,19)-(53,29)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Hi, Dude"
}
],
"sourcemaps:sources": [
{
"@id": "#109/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(53,19)-(53,29)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#109"
}
],
"sourcemaps:value": [
{
"@value": "[(53,19)-(53,29)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#109"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#107"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#108/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#108"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(50,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(51,10)-(52,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#108"
}
],
"sourcemaps:value": [
{
"@value": "[(48,8)-(54,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:name"
}
],
"sourcemaps:value": [
{
"@value": "[(49,10)-(50,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#107/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:required"
}
],
"sourcemaps:value": [
{
"@value": "[(52,10)-(53,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#107"
}
],
"sourcemaps:value": [
{
"@value": "[(48,8)-(54,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(51,10)-(52,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#106/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:parameter"
}
],
"sourcemaps:value": [
{
"@value": "[(47,6)-(54,0)]"
}
]
}
]
}
]
}
],
"hydra:returns": [
{
"@id": "#110",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "200"
}
],
"hydra:statusCode": [
{
"@value": "200"
}
],
"raml-http:payload": [
{
"@id": "#111",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#112",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#91",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#id"
}
],
"raml-shapes:range": [
{
"@id": "#92",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:minLength": [
{
"@value": 36
}
],
"shacl:maxLength": [
{
"@value": 36
}
],
"shacl:name": [
{
"@value": "id"
}
],
"schema-org:description": [
{
"@value": "The ID of the representation, a randomly generated UUID."
}
],
"sourcemaps:sources": [
{
"@id": "#92/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#92"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(15,3)-(15,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:minLength"
}
],
"sourcemaps:value": [
{
"@value": "[(13,3)-(13,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#92"
}
],
"sourcemaps:value": [
{
"@value": "[(11,2)-(11,8)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:maxLength"
}
],
"sourcemaps:value": [
{
"@value": "[(14,3)-(14,16)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "id"
}
],
"sourcemaps:sources": [
{
"@id": "#91/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(7,2)-(7,6)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#91"
}
],
"sourcemaps:value": [
{
"@value": "[(11,2)-(11,8)]"
}
]
}
]
}
]
},
{
"@id": "#93",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#message"
}
],
"raml-shapes:range": [
{
"@id": "#94",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "message"
}
],
"schema-org:description": [
{
"@value": "The text message of the greeting."
}
],
"sourcemaps:sources": [
{
"@id": "#94/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#94"
}
],
"sourcemaps:value": [
{
"@value": "[(18,3)-(18,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(19,3)-(19,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#94"
}
],
"sourcemaps:value": [
{
"@value": "[(17,2)-(17,13)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(18,3)-(18,11)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "message"
}
],
"sourcemaps:sources": [
{
"@id": "#93/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(8,2)-(8,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#93"
}
],
"sourcemaps:value": [
{
"@value": "[(17,2)-(17,13)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Describes simple greeting representation consisting of an ID and a message."
}
],
"doc:examples": [
{
"@id": "#113",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#113",
"@type": [
"data:Object"
],
"data:id": [
{
"@id": "#114",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "82157f46-887e-4907-b7c6-06278b3b9ea1",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#114/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#114"
}
],
"sourcemaps:value": [
{
"@value": "[(2,7)-(2,45)]"
}
]
}
]
}
]
}
],
"data:message": [
{
"@id": "#115",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Welcome and thanks for your request, mike.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#115/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#115"
}
],
"sourcemaps:value": [
{
"@value": "[(3,12)-(3,56)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#113/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#113"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"id\": \"82157f46-887e-4907-b7c6-06278b3b9ea1\",\n\t\"message\": \"Welcome and thanks for your request, mike.\"\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#113"
}
],
"sourcemaps:value": [
{
"@value": "message->[(3,1)-(3,12)]#id->[(2,1)-(2,7)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#113"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(4,1)]"
}
]
}
]
}
]
}
],
"doc:reference-id": [
{
"@id": "#4"
}
],
"sourcemaps:sources": [
{
"@id": "#113/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#113"
}
],
"sourcemaps:value": [
{
"@value": "[(58,23)-(58,57)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#113"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#111"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#112/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#112"
}
],
"sourcemaps:value": [
{
"@value": "{\r\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n\t\"description\": \"Describes simple greeting representation consisting of an ID and a message.\",\r\n\t\"additionalProperties\": false,\r\n\t\"type\": \"object\",\r\n\t\"required\": [\r\n\t\t\"id\",\r\n\t\t\"message\"\r\n\t],\r\n\t\"properties\": {\r\n\t\t\"id\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"minLength\": 36,\r\n\t\t\t\"maxLength\": 36,\r\n\t\t\t\"description\": \"The ID of the representation, a randomly generated UUID.\"\r\n\t\t},\r\n\t\t\"message\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The text message of the greeting.\"\r\n\t\t}\r\n\t}\r\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(3,1)-(3,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#112"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(30,22)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(4,1)-(4,25)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#112"
}
],
"sourcemaps:value": [
{
"@value": "[(5,1)-(5,7)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#111/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#111"
}
],
"sourcemaps:value": [
{
"@value": "[(57,12)-(60,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#110/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(56,10)-(60,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#110"
}
],
"sourcemaps:value": [
{
"@value": "[(55,8)-(60,0)]"
}
]
}
]
}
]
}
],
"security:security": [
{
"@id": "#86",
"@type": [
"security:ParametrizedSecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "candaCommons.basicAuth"
}
],
"security:scheme": [
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#86/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#86"
}
],
"sourcemaps:value": [
{
"@value": "[(13,12)-(13,34)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#105/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:returns"
}
],
"sourcemaps:value": [
{
"@value": "[(54,6)-(60,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#105"
}
],
"sourcemaps:value": [
{
"@value": "[(45,4)-(60,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(46,6)-(47,0)]"
}
]
}
]
}
]
}
],
"raml-http:parameter": [
{
"@id": "#116",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "name"
}
],
"raml-http:paramName": [
{
"@value": "name"
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "path"
}
],
"raml-http:schema": [
{
"@id": "#117",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"doc:examples": [
{
"@id": "#118",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#118",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "mike",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#118/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#118"
}
],
"sourcemaps:value": [
{
"@value": "[(44,17)-(44,23)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "mike"
}
],
"sourcemaps:sources": [
{
"@id": "#118/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(44,17)-(44,23)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#118"
}
],
"sourcemaps:value": [
{
"@value": "[(44,17)-(44,23)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#118"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#116"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#117/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#117"
}
],
"sourcemaps:value": [
{
"@value": "[(43,8)-(43,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(43,8)-(44,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#117"
}
],
"sourcemaps:value": [
{
"@value": "[(42,6)-(45,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#116/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#116"
}
],
"sourcemaps:value": [
{
"@value": "[(42,6)-(45,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#104/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parent-end-point": [
{
"sourcemaps:element": [
{
"@value": "amf://id#104"
}
],
"sourcemaps:value": [
{
"@value": "file://demo/SE-11415/SE-11415.raml#/web-api/end-points/%2Fgreetings"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:parameter"
}
],
"sourcemaps:value": [
{
"@value": "[(41,18)-(45,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#104"
}
],
"sourcemaps:value": [
{
"@value": "[(39,2)-(60,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
}
]
}
]
},
{
"@id": "#119",
"@type": [
"raml-http:EndPoint",
"doc:DomainElement"
],
"raml-http:path": [
{
"@value": "/companies"
}
],
"schema-org:description": [
{
"@value": "The companies resource is probably the most simple representation of a C&A company."
}
],
"hydra:supportedOperation": [
{
"@id": "#120",
"@type": [
"hydra:Operation",
"doc:DomainElement"
],
"hydra:method": [
{
"@value": "get"
}
],
"schema-org:description": [
{
"@value": "Answers a collection (1..n) of all available Companies with their basic attributes."
}
],
"hydra:returns": [
{
"@id": "#121",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "200"
}
],
"hydra:statusCode": [
{
"@value": "200"
}
],
"raml-http:payload": [
{
"@id": "#122",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#123",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#124",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#companies"
}
],
"raml-shapes:range": [
{
"@id": "#125",
"@type": [
"raml-shapes:ArrayShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"raml-shapes:items": [
{
"@id": "#126",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#127",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#code"
}
],
"raml-shapes:range": [
{
"@id": "#128",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"shacl:minInclusive": [
{
"@value": 0.0
}
],
"shacl:maxInclusive": [
{
"@value": 99.0
}
],
"shacl:name": [
{
"@value": "code"
}
],
"schema-org:description": [
{
"@value": "The code of the given company is the unique identifier of the entity."
}
],
"sourcemaps:sources": [
{
"@id": "#128/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#128"
}
],
"sourcemaps:value": [
{
"@value": "[(12,12)-(12,18)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(15,12)-(15,27)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:minInclusive"
}
],
"sourcemaps:value": [
{
"@value": "[(13,5)-(13,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#128"
}
],
"sourcemaps:value": [
{
"@value": "[(11,10)-(11,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(12,12)-(12,20)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:maxInclusive"
}
],
"sourcemaps:value": [
{
"@value": "[(14,5)-(14,16)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "code"
}
],
"sourcemaps:sources": [
{
"@id": "#127/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(24,10)-(24,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#127"
}
],
"sourcemaps:value": [
{
"@value": "[(11,10)-(11,18)]"
}
]
}
]
}
]
},
{
"@id": "#129",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#name"
}
],
"raml-shapes:range": [
{
"@id": "#130",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:maxLength": [
{
"@value": 50
}
],
"shacl:name": [
{
"@value": "name"
}
],
"schema-org:description": [
{
"@value": "The legal name of the given company."
}
],
"sourcemaps:sources": [
{
"@id": "#130/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#130"
}
],
"sourcemaps:value": [
{
"@value": "[(18,12)-(18,18)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(20,12)-(20,27)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(18,12)-(18,20)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#130"
}
],
"sourcemaps:value": [
{
"@value": "[(17,10)-(17,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:maxLength"
}
],
"sourcemaps:value": [
{
"@value": "[(19,12)-(19,25)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "name"
}
],
"sourcemaps:sources": [
{
"@id": "#129/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(25,10)-(25,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#129"
}
],
"sourcemaps:value": [
{
"@value": "[(17,10)-(17,18)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "items"
}
],
"sourcemaps:sources": [
{
"@id": "#126/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#126"
}
],
"sourcemaps:value": [
{
"@value": "[(27,8)-(27,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(9,8)-(9,32)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#126"
}
],
"sourcemaps:value": [
{
"@value": "[(8,6)-(8,15)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "companies"
}
],
"sourcemaps:sources": [
{
"@id": "#125/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#125"
}
],
"sourcemaps:value": [
{
"@value": "[(29,6)-(29,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#125"
}
],
"sourcemaps:value": [
{
"@value": "[(7,4)-(7,17)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "companies"
}
],
"sourcemaps:sources": [
{
"@id": "#124/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(33,4)-(33,15)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#124"
}
],
"sourcemaps:value": [
{
"@value": "[(7,4)-(7,17)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Describes the probably most simple representation of a CANDA company."
}
],
"doc:examples": [
{
"@id": "#131",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#131",
"@type": [
"data:Object"
],
"data:companies": [
{
"@id": "#132",
"@type": [
"data:Array",
"rdf:Seq"
],
"rdf:member": [
{
"@id": "#133",
"@type": [
"data:Object"
],
"data:code": [
{
"@id": "#134",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "2",
"@type": "xsd:integer"
}
],
"sourcemaps:sources": [
{
"@id": "#134/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#134"
}
],
"sourcemaps:value": [
{
"@value": "[(3,11)-(3,12)]"
}
]
}
]
}
]
}
],
"data:name": [
{
"@id": "#135",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "C & A Mode GmbH & Co. KG, Germany",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#135/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#135"
}
],
"sourcemaps:value": [
{
"@value": "[(4,10)-(4,45)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#133/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#133"
}
],
"sourcemaps:value": [
{
"@value": "code->[(3,2)-(3,11)]#name->[(4,2)-(4,10)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#133"
}
],
"sourcemaps:value": [
{
"@value": "[(2,15)-(5,3)]"
}
]
}
]
}
]
},
{
"@id": "#136",
"@type": [
"data:Object"
],
"data:code": [
{
"@id": "#137",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "11",
"@type": "xsd:integer"
}
],
"sourcemaps:sources": [
{
"@id": "#137/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#137"
}
],
"sourcemaps:value": [
{
"@value": "[(7,16)-(7,18)]"
}
]
}
]
}
]
}
],
"data:name": [
{
"@id": "#138",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "C & A Nederland",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#138/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#138"
}
],
"sourcemaps:value": [
{
"@value": "[(8,10)-(8,27)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#136/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#136"
}
],
"sourcemaps:value": [
{
"@value": "code->[(7,7)-(7,16)]#name->[(8,2)-(8,10)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#136"
}
],
"sourcemaps:value": [
{
"@value": "[(6,2)-(9,6)]"
}
]
}
]
}
]
}
],
"data:pos0": [
{
"@id": "#133"
}
],
"data:pos1": [
{
"@id": "#136"
}
],
"sourcemaps:sources": [
{
"@id": "#132/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#132"
}
],
"sourcemaps:value": [
{
"@value": "[(2,14)-(10,2)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#131/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#131"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"companies\": [{\n\t\t\"code\" : 2,\n\t\t\"name\": \"C & A Mode GmbH & Co. KG, Germany\"\n\t\t},\n\t\t{\n      \t\"code\" : 11,\n\t\t\"name\": \"C & A Nederland\"\n    \t}\n\t]\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#131"
}
],
"sourcemaps:value": [
{
"@value": "companies->[(2,1)-(2,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#131"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(11,1)]"
}
]
}
]
}
]
}
],
"doc:reference-id": [
{
"@id": "#12"
}
],
"sourcemaps:sources": [
{
"@id": "#131/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#131"
}
],
"sourcemaps:value": [
{
"@value": "[(68,21)-(68,56)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#131"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#122"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#123/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#123"
}
],
"sourcemaps:value": [
{
"@value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"description\": \"Describes the probably most simple representation of a CANDA company.\",\n  \"additionalProperties\": false,\n  \"definitions\": {},\n  \"properties\": {\n    \"companies\": {\n      \"items\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n\t\t  \t\"minimum\": 0,\n\t\t  \t\"maximum\": 99,\n            \"description\": \"The code of the given company is the unique identifier of the entity.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"maxLength\": 50,\n            \"description\": \"The legal name of the given company.\"\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"name\"\n        ],\n        \"type\": \"object\"\n      },\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"companies\"\n  ],\n  \"type\": \"object\"\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(3,2)-(3,17)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#123"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(67,26)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(4,2)-(4,26)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#123"
}
],
"sourcemaps:value": [
{
"@value": "[(35,2)-(35,8)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#122/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#122"
}
],
"sourcemaps:value": [
{
"@value": "[(67,10)-(70,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#121/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(66,8)-(70,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#121"
}
],
"sourcemaps:value": [
{
"@value": "[(65,6)-(70,0)]"
}
]
}
]
}
]
},
{
"@id": "#139",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "204"
}
],
"schema-org:description": [
{
"@value": "The response does not contain any content."
}
],
"hydra:statusCode": [
{
"@value": "204"
}
],
"sourcemaps:sources": [
{
"@id": "#139/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(71,8)-(72,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#139"
}
],
"sourcemaps:value": [
{
"@value": "[(70,6)-(72,0)]"
}
]
}
]
}
]
}
],
"security:security": [
{
"@id": "#86",
"@type": [
"security:ParametrizedSecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "candaCommons.basicAuth"
}
],
"security:scheme": [
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#86/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#86"
}
],
"sourcemaps:value": [
{
"@value": "[(13,12)-(13,34)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#120/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:returns"
}
],
"sourcemaps:value": [
{
"@value": "[(64,4)-(72,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#120"
}
],
"sourcemaps:value": [
{
"@value": "[(62,2)-(72,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(63,4)-(64,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#119/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(61,2)-(62,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#119"
}
],
"sourcemaps:value": [
{
"@value": "[(60,0)-(72,0)]"
}
]
}
]
}
]
},
{
"@id": "#140",
"@type": [
"raml-http:EndPoint",
"doc:DomainElement"
],
"raml-http:path": [
{
"@value": "/additions"
}
],
"schema-org:description": [
{
"@value": "The additions resource consists of the elements of a mathematical addition - a result and the summands."
}
],
"hydra:supportedOperation": [
{
"@id": "#141",
"@type": [
"hydra:Operation",
"doc:DomainElement"
],
"hydra:method": [
{
"@value": "get"
}
],
"schema-org:description": [
{
"@value": "Answers a simple JSON response that reflects the elements of an addition."
}
],
"hydra:expects": [
{
"@id": "#142",
"@type": [
"raml-http:Request",
"doc:DomainElement"
],
"raml-http:parameter": [
{
"@id": "#143",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "summands"
}
],
"raml-http:paramName": [
{
"@value": "summands"
}
],
"schema-org:description": [
{
"@value": "Pass the list of summands separated by ',' (comma). Each summand must be a value between 0 and 99999. The value must not contain spaces."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "query"
}
],
"raml-http:schema": [
{
"@id": "#144",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:pattern": [
{
"@value": "^[0-9]{1,5}(,[0-9]{1,5})*$"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:name": [
{
"@value": "summands"
}
],
"schema-org:description": [
{
"@value": "Pass the list of summands separated by ',' (comma). Each summand must be a value between 0 and 99999. The value must not contain spaces."
}
],
"doc:examples": [
{
"@id": "#145",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#145",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "2,4,88765,0",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#145/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#145"
}
],
"sourcemaps:value": [
{
"@value": "[(83,17)-(83,30)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "2,4,88765,0"
}
],
"sourcemaps:sources": [
{
"@id": "#145/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(83,17)-(83,30)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#145"
}
],
"sourcemaps:value": [
{
"@value": "[(83,17)-(83,30)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#145"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#143"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#144/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#144"
}
],
"sourcemaps:value": [
{
"@value": "[(79,8)-(79,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(80,8)-(81,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:pattern"
}
],
"sourcemaps:value": [
{
"@value": "[(82,8)-(83,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#144"
}
],
"sourcemaps:value": [
{
"@value": "[(77,6)-(84,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(79,8)-(80,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:name"
}
],
"sourcemaps:value": [
{
"@value": "[(78,8)-(79,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#143/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:required"
}
],
"sourcemaps:value": [
{
"@value": "[(81,8)-(82,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#143"
}
],
"sourcemaps:value": [
{
"@value": "[(77,6)-(84,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(80,8)-(81,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#142/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:parameter"
}
],
"sourcemaps:value": [
{
"@value": "[(76,4)-(84,0)]"
}
]
}
]
}
]
}
],
"hydra:returns": [
{
"@id": "#146",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "200"
}
],
"hydra:statusCode": [
{
"@value": "200"
}
],
"raml-http:payload": [
{
"@id": "#147",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#148",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#149",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#sum"
}
],
"raml-shapes:range": [
{
"@id": "#150",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"shacl:name": [
{
"@value": "sum"
}
],
"schema-org:description": [
{
"@value": "The result (sum) of the addition."
}
],
"sourcemaps:sources": [
{
"@id": "#150/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#150"
}
],
"sourcemaps:value": [
{
"@value": "[(11,3)-(11,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(12,3)-(12,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#150"
}
],
"sourcemaps:value": [
{
"@value": "[(10,2)-(10,9)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(11,3)-(11,11)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "sum"
}
],
"sourcemaps:sources": [
{
"@id": "#149/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(39,2)-(39,7)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#149"
}
],
"sourcemaps:value": [
{
"@value": "[(10,2)-(10,9)]"
}
]
}
]
}
]
},
{
"@id": "#151",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#summands"
}
],
"raml-shapes:range": [
{
"@id": "#152",
"@type": [
"raml-shapes:ArrayShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"raml-shapes:items": [
{
"@id": "#153",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": true
}
],
"shacl:property": [
{
"@id": "#154",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#value"
}
],
"raml-shapes:range": [
{
"@id": "#155",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"shacl:name": [
{
"@value": "value"
}
],
"schema-org:description": [
{
"@value": "The integer value of the summand."
}
],
"sourcemaps:sources": [
{
"@id": "#155/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#155"
}
],
"sourcemaps:value": [
{
"@value": "[(21,6)-(21,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(22,6)-(22,21)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#155"
}
],
"sourcemaps:value": [
{
"@value": "[(20,5)-(20,14)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(21,6)-(21,14)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "value"
}
],
"sourcemaps:sources": [
{
"@id": "#154/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(27,5)-(27,12)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#154"
}
],
"sourcemaps:value": [
{
"@value": "[(20,5)-(20,14)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "items"
}
],
"sourcemaps:sources": [
{
"@id": "#153/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#153"
}
],
"sourcemaps:value": [
{
"@value": "[(30,4)-(30,10)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(18,4)-(18,28)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#153"
}
],
"sourcemaps:value": [
{
"@value": "[(17,3)-(17,12)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "summands"
}
],
"sourcemaps:sources": [
{
"@id": "#152/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#152"
}
],
"sourcemaps:value": [
{
"@value": "[(33,3)-(33,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#152"
}
],
"sourcemaps:value": [
{
"@value": "[(15,2)-(15,14)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "summands"
}
],
"sourcemaps:sources": [
{
"@id": "#151/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,12)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#151"
}
],
"sourcemaps:value": [
{
"@value": "[(15,2)-(15,14)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Describes the representation of an addition with 1..n summands."
}
],
"doc:examples": [
{
"@id": "#156",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#156",
"@type": [
"data:Object"
],
"data:sum": [
{
"@id": "#157",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "7",
"@type": "xsd:integer"
}
],
"sourcemaps:sources": [
{
"@id": "#157/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#157"
}
],
"sourcemaps:value": [
{
"@value": "[(2,8)-(2,9)]"
}
]
}
]
}
]
}
],
"data:summands": [
{
"@id": "#158",
"@type": [
"data:Array",
"rdf:Seq"
],
"rdf:member": [
{
"@id": "#159",
"@type": [
"data:Object"
],
"data:value": [
{
"@id": "#160",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "3",
"@type": "xsd:integer"
}
],
"sourcemaps:sources": [
{
"@id": "#160/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#160"
}
],
"sourcemaps:value": [
{
"@value": "[(5,12)-(5,13)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#159/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#159"
}
],
"sourcemaps:value": [
{
"@value": "value->[(5,3)-(5,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#159"
}
],
"sourcemaps:value": [
{
"@value": "[(4,2)-(6,3)]"
}
]
}
]
}
]
},
{
"@id": "#161",
"@type": [
"data:Object"
],
"data:value": [
{
"@id": "#162",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "4",
"@type": "xsd:integer"
}
],
"sourcemaps:sources": [
{
"@id": "#162/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#162"
}
],
"sourcemaps:value": [
{
"@value": "[(9,12)-(9,13)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#161/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#161"
}
],
"sourcemaps:value": [
{
"@value": "value->[(9,3)-(9,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#161"
}
],
"sourcemaps:value": [
{
"@value": "[(8,2)-(10,3)]"
}
]
}
]
}
]
}
],
"data:pos0": [
{
"@id": "#159"
}
],
"data:pos1": [
{
"@id": "#161"
}
],
"sourcemaps:sources": [
{
"@id": "#158/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#158"
}
],
"sourcemaps:value": [
{
"@value": "[(3,13)-(11,2)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#156/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#156"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"sum\": 7,\n\t\"summands\": [\n\t\t{\n\t\t\t\"value\": 3\n\t\t},\n\n\t\t{\n\t\t\t\"value\": 4\n\t\t}\n\t]\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#156"
}
],
"sourcemaps:value": [
{
"@value": "sum->[(2,1)-(2,8)]#summands->[(3,1)-(3,13)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#156"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(12,1)]"
}
]
}
]
}
]
}
],
"doc:reference-id": [
{
"@id": "#60"
}
],
"sourcemaps:sources": [
{
"@id": "#156/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#156"
}
],
"sourcemaps:value": [
{
"@value": "[(88,21)-(88,56)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#156"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#147"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#148/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#148"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"description\": \"Describes the representation of an addition with 1..n summands.\",\n\t\"additionalProperties\": false,\n\t\"definitions\": {\n\t\t\n\t},\n\n\t\"properties\": {\n\t\t\"sum\": {\n\t\t\t\"type\": \"integer\",\n\t\t\t\"description\": \"The result (sum) of the addition.\"\n\t\t},\n\n\t\t\"summands\": {\n\t\t\t\"additionalItems\": false,\n\t\t\t\"items\": {\n\t\t\t\t\"additionalProperties\": false,\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"description\": \"The integer value of the summand.\"\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t\"required\": [\n\t\t\t\t\t\"value\"\n\t\t\t\t],\n\n\t\t\t\t\"type\": \"object\"\n\t\t\t},\n\n\t\t\t\"type\": \"array\"\n\t\t}\n\t},\n\n\t\"required\": [\n\t\t\"summands\",\n\t\t\"sum\"\n\t],\n\n\t\"type\": \"object\"\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(3,1)-(3,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#148"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(87,26)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:closed"
}
],
"sourcemaps:value": [
{
"@value": "[(4,1)-(4,25)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#148"
}
],
"sourcemaps:value": [
{
"@value": "[(42,1)-(42,7)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#147/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#147"
}
],
"sourcemaps:value": [
{
"@value": "[(87,10)-(91,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#146/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(86,8)-(91,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#146"
}
],
"sourcemaps:value": [
{
"@value": "[(85,6)-(91,0)]"
}
]
}
]
}
]
}
],
"security:security": [
{
"@id": "#86",
"@type": [
"security:ParametrizedSecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "candaCommons.basicAuth"
}
],
"security:scheme": [
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#86/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#86"
}
],
"sourcemaps:value": [
{
"@value": "[(13,12)-(13,34)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#141/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:returns"
}
],
"sourcemaps:value": [
{
"@value": "[(84,4)-(91,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#141"
}
],
"sourcemaps:value": [
{
"@value": "[(74,2)-(91,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(75,4)-(76,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#140/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(73,2)-(74,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#140"
}
],
"sourcemaps:value": [
{
"@value": "[(72,0)-(91,0)]"
}
]
}
]
}
]
},
{
"@id": "#163",
"@type": [
"raml-http:EndPoint",
"doc:DomainElement"
],
"raml-http:path": [
{
"@value": "/logLevels/{loggerName}"
}
],
"schema-org:description": [
{
"@value": "Change the severity of a specific logger."
}
],
"hydra:supportedOperation": [
{
"@id": "#168",
"@type": [
"hydra:Operation",
"doc:DomainElement"
],
"hydra:method": [
{
"@value": "put"
}
],
"hydra:expects": [
{
"@id": "#169",
"@type": [
"raml-http:Request",
"doc:DomainElement"
],
"raml-http:payload": [
{
"@id": "#170",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#171",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": false
}
],
"shacl:property": [
{
"@id": "#172",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#newLevel"
}
],
"raml-shapes:range": [
{
"@id": "#173",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "newLevel"
}
],
"schema-org:description": [
{
"@value": "The new log level to be set."
}
],
"shacl:in": [
{
"@id": "#173/list",
"@type": "rdfs:Seq",
"rdfs:_1": [
{
"@id": "#174",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "OFF",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#174/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#174"
}
],
"sourcemaps:value": [
{
"@value": "[(11,4)-(11,9)]"
}
]
}
]
}
]
}
],
"rdfs:_2": [
{
"@id": "#174",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "ERROR",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#174/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#174"
}
],
"sourcemaps:value": [
{
"@value": "[(12,4)-(12,11)]"
}
]
}
]
}
]
}
],
"rdfs:_3": [
{
"@id": "#174",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "WARN",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#174/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#174"
}
],
"sourcemaps:value": [
{
"@value": "[(13,4)-(13,10)]"
}
]
}
]
}
]
}
],
"rdfs:_4": [
{
"@id": "#174",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "INFO",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#174/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#174"
}
],
"sourcemaps:value": [
{
"@value": "[(14,4)-(14,10)]"
}
]
}
]
}
]
}
],
"rdfs:_5": [
{
"@id": "#174",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "DEBUG",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#174/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#174"
}
],
"sourcemaps:value": [
{
"@value": "[(15,4)-(15,11)]"
}
]
}
]
}
]
}
],
"rdfs:_6": [
{
"@id": "#174",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "TRACE",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#174/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#174"
}
],
"sourcemaps:value": [
{
"@value": "[(16,4)-(16,11)]"
}
]
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#173/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#173"
}
],
"sourcemaps:value": [
{
"@value": "[(8,3)-(8,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:in"
}
],
"sourcemaps:value": [
{
"@value": "[(10,3)-(10,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(8,3)-(8,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#173"
}
],
"sourcemaps:value": [
{
"@value": "[(7,2)-(7,14)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(9,3)-(9,18)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 1
}
],
"shacl:name": [
{
"@value": "newLevel"
}
],
"sourcemaps:sources": [
{
"@id": "#172/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:minCount"
}
],
"sourcemaps:value": [
{
"@value": "[(29,2)-(29,12)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#172"
}
],
"sourcemaps:value": [
{
"@value": "[(7,2)-(7,14)]"
}
]
}
]
}
]
},
{
"@id": "#175",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#createFlag"
}
],
"raml-shapes:range": [
{
"@id": "#176",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#boolean"
}
],
"shacl:name": [
{
"@value": "createFlag"
}
],
"schema-org:description": [
{
"@value": "Optional parameter to create a logger in case it does not exist (to avoid typo errors for existing loggers)."
}
],
"sourcemaps:sources": [
{
"@id": "#176/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#176"
}
],
"sourcemaps:value": [
{
"@value": "[(21,3)-(21,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(20,3)-(20,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#176"
}
],
"sourcemaps:value": [
{
"@value": "[(19,2)-(19,16)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(21,3)-(21,11)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 0
}
],
"shacl:name": [
{
"@value": "createFlag"
}
],
"sourcemaps:sources": [
{
"@id": "#175/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#175"
}
],
"sourcemaps:value": [
{
"@value": "[(19,2)-(19,16)]"
}
]
}
]
}
]
},
{
"@id": "#177",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#hoursToReset"
}
],
"raml-shapes:range": [
{
"@id": "#178",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#integer"
}
],
"shacl:name": [
{
"@value": "hoursToReset"
}
],
"schema-org:description": [
{
"@value": "Delay in hours after which time the logger is set back to its original log level."
}
],
"sourcemaps:sources": [
{
"@id": "#178/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#178"
}
],
"sourcemaps:value": [
{
"@value": "[(25,3)-(25,9)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(24,3)-(24,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#178"
}
],
"sourcemaps:value": [
{
"@value": "[(23,2)-(23,18)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(25,3)-(25,11)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 0
}
],
"shacl:name": [
{
"@value": "hoursToReset"
}
],
"sourcemaps:sources": [
{
"@id": "#177/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#177"
}
],
"sourcemaps:value": [
{
"@value": "[(23,2)-(23,18)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:name": [
{
"@value": "change  a certain log level"
}
],
"doc:examples": [
{
"@id": "#179",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#179",
"@type": [
"data:Object"
],
"data:newLevel": [
{
"@id": "#180",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "DEBUG",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#180/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#180"
}
],
"sourcemaps:value": [
{
"@value": "[(3,13)-(3,20)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#179/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#179"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"newLevel\": \"DEBUG\"\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#179"
}
],
"sourcemaps:value": [
{
"@value": "newLevel->[(3,1)-(3,13)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#179"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(4,1)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "{\n\t\"newLevel\": \"DEBUG\"\n}"
}
],
"sourcemaps:sources": [
{
"@id": "#179/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#179"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#179"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#181"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#171/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#171"
}
],
"sourcemaps:value": [
{
"@value": "{\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"title\": \"change  a certain log level\",\n\t\"properties\": {\n\t\t\"newLevel\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"The new log level to be set.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"OFF\",\n\t\t\t\t\"ERROR\",\n\t\t\t\t\"WARN\",\n\t\t\t\t\"INFO\",\n\t\t\t\t\"DEBUG\",\n\t\t\t\t\"TRACE\"\n\t\t\t]\n\t\t},\n\t\t\"createFlag\": {\n\t\t\t\"description\": \"Optional parameter to create a logger in case it does not exist (to avoid typo errors for existing loggers).\",\n\t\t\t\"type\": \"boolean\"\n\t\t},\n\t\t\"hoursToReset\": {\n\t\t\t\"description\": \"Delay in hours after which time the logger is set back to its original log level.\",\n\t\t\t\"type\": \"integer\"\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"newLevel\"\n\t]\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:name"
}
],
"sourcemaps:value": [
{
"@value": "[(5,1)-(5,10)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#171"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(31,1)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#171"
}
],
"sourcemaps:value": [
{
"@value": "[(4,1)-(4,7)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#170/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#170"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(26,16)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#169/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(26,16)]"
}
]
}
]
}
]
}
],
"hydra:returns": [
{
"@id": "#182",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "200"
}
],
"hydra:statusCode": [
{
"@value": "200"
}
],
"raml-http:payload": [
{
"@id": "#183",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
],
"raml-http:schema": [
{
"@id": "#184",
"@type": [
"shacl:NodeShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:closed": [
{
"@value": false
}
],
"shacl:property": [
{
"@id": "#185",
"@type": [
"shacl:PropertyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:path": [
{
"@id": "http://a.ml/vocabularies/data#message"
}
],
"raml-shapes:range": [
{
"@id": "#186",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "message"
}
],
"schema-org:description": [
{
"@value": "the human readable result of the changeLogLevel operation."
}
],
"sourcemaps:sources": [
{
"@id": "#186/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#186"
}
],
"sourcemaps:value": [
{
"@value": "[(8,6)-(8,12)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(7,6)-(7,20)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#186"
}
],
"sourcemaps:value": [
{
"@value": "[(6,4)-(6,15)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(8,6)-(8,14)]"
}
]
}
]
}
]
}
],
"shacl:minCount": [
{
"@value": 0
}
],
"shacl:name": [
{
"@value": "message"
}
],
"sourcemaps:sources": [
{
"@id": "#185/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#185"
}
],
"sourcemaps:value": [
{
"@value": "[(6,4)-(6,15)]"
}
]
}
]
}
]
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Add\n\"#[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)]\"\nto your generated set-payload flow element.\n"
}
],
"doc:examples": [
{
"@id": "#187",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#187",
"@type": [
"data:Object"
],
"data:message": [
{
"@id": "#188",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "TODO you need to replace this generated setpayload by #[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)] in the api.xml",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#188/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#188"
}
],
"sourcemaps:value": [
{
"@value": "[(3,14)-(3,174)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#187/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-example": [
{
"sourcemaps:element": [
{
"@value": "amf://id#187"
}
],
"sourcemaps:value": [
{
"@value": "{\n  \"message\" : \"TODO you need to replace this generated setpayload by #[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)] in the api.xml\"\n}"
}
]
}
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#187"
}
],
"sourcemaps:value": [
{
"@value": "message->[(3,2)-(3,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#187"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(4,1)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "{\n  \"message\" : \"TODO you need to replace this generated setpayload by #[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)] in the api.xml\"\n}"
}
],
"sourcemaps:sources": [
{
"@id": "#187/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#187"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#187"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#189"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#184/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:parsed-json-schema": [
{
"sourcemaps:element": [
{
"@value": "amf://id#184"
}
],
"sourcemaps:value": [
{
"@value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"description\":\"the human readable result of the changeLogLevel operation.\",\n      \"type\": \"string\"\n    }\n  }\n}"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(31,16)-(35,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#184"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(30,30)]"
}
]
}
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#184"
}
],
"sourcemaps:value": [
{
"@value": "[(4,2)-(4,8)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#183/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#183"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(36,20)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#182/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(36,20)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#182"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(36,20)]"
}
]
}
]
}
]
}
],
"security:security": [
{
"@id": "#86",
"@type": [
"security:ParametrizedSecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "candaCommons.basicAuth"
}
],
"security:scheme": [
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#86/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#86"
}
],
"sourcemaps:value": [
{
"@value": "[(13,12)-(13,34)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#168/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:returns"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(36,20)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#168"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(36,20)]"
}
]
}
]
}
]
}
],
"raml-http:parameter": [
{
"@id": "#164",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "loggerName"
}
],
"raml-http:paramName": [
{
"@value": "loggerName"
}
],
"schema-org:description": [
{
"@value": "Name of the logger whose level is to be changed."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "path"
}
],
"raml-http:schema": [
{
"@id": "#165",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "loggerName"
}
],
"schema-org:description": [
{
"@value": "Name of the logger whose level is to be changed."
}
],
"doc:examples": [
{
"@id": "#166",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#166",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "org.apache",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#166/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#166"
}
],
"sourcemaps:value": [
{
"@value": "[(21,19)-(21,31)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "org.apache"
}
],
"sourcemaps:sources": [
{
"@id": "#166/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(21,19)-(21,31)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#166"
}
],
"sourcemaps:value": [
{
"@value": "[(21,19)-(21,31)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#166"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#167"
}
]
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#164/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "amf://id#164"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#163/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#163"
}
],
"sourcemaps:value": [
{
"@value": "[(91,0)-(93,0)]"
}
]
}
]
}
]
},
{
"@id": "#190",
"@type": [
"raml-http:EndPoint",
"doc:DomainElement"
],
"raml-http:path": [
{
"@value": "/ping"
}
],
"schema-org:description": [
{
"@value": "Answers the current version of the deployed Mule application, possibly a value like \"2018.6.1\". Your implementation should always return **${muleapp.version.info}**.\n"
}
],
"hydra:supportedOperation": [
{
"@id": "#191",
"@type": [
"hydra:Operation",
"doc:DomainElement"
],
"hydra:method": [
{
"@value": "get"
}
],
"hydra:returns": [
{
"@id": "#192",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "200"
}
],
"hydra:statusCode": [
{
"@value": "200"
}
],
"raml-http:payload": [
{
"@id": "#193",
"@type": [
"raml-http:Payload",
"doc:DomainElement"
],
"raml-http:mediaType": [
{
"@value": "text/plain"
}
],
"raml-http:schema": [
{
"@id": "#194",
"@type": [
"raml-shapes:AnyShape",
"shacl:Shape",
"raml-shapes:Shape"
],
"shacl:name": [
{
"@value": "schema"
}
],
"doc:examples": [
{
"@id": "#195",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#196",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "${muleapp.version.info}",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#196/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#196"
}
],
"sourcemaps:value": [
{
"@value": "[(13,23)-(13,46)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "${muleapp.version.info}"
}
],
"sourcemaps:sources": [
{
"@id": "#195/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(13,23)-(13,46)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#195"
}
],
"sourcemaps:value": [
{
"@value": "[(13,23)-(13,46)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#195"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#197"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#194/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#194"
}
],
"sourcemaps:value": [
{
"@value": "[(12,12)-(13,46)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#193/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#193"
}
],
"sourcemaps:value": [
{
"@value": "[(12,12)-(13,46)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#192/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "raml-http:payload"
}
],
"sourcemaps:value": [
{
"@value": "[(11,10)-(13,46)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#192"
}
],
"sourcemaps:value": [
{
"@value": "[(10,8)-(13,46)]"
}
]
}
]
}
]
}
],
"security:security": [
{
"@id": "#86",
"@type": [
"security:ParametrizedSecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "candaCommons.basicAuth"
}
],
"security:scheme": [
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#86/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#86"
}
],
"sourcemaps:value": [
{
"@value": "[(13,12)-(13,34)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#191/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:returns"
}
],
"sourcemaps:value": [
{
"@value": "[(9,6)-(13,46)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#191"
}
],
"sourcemaps:value": [
{
"@value": "[(8,4)-(13,46)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#190/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#190"
}
],
"sourcemaps:value": [
{
"@value": "[(93,0)-(95,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#61/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:source-vendor": [
{
"sourcemaps:element": [
{
"@value": "amf://id#61"
}
],
"sourcemaps:value": [
{
"@value": "RAML 1.0"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:documentation"
}
],
"sourcemaps:value": [
{
"@value": "[(3,0)-(7,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:server"
}
],
"sourcemaps:value": [
{
"@value": "[(8,0)-(10,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#61"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(95,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:name"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(3,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:version"
}
],
"sourcemaps:value": [
{
"@value": "[(7,0)-(8,0)]"
}
]
}
]
}
]
}
],
"doc:references": [
{
"@id": "#1",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#2",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"description\": \"Describes the probably most simple representation of a CANDA company.\",\n  \"additionalProperties\": false,\n  \"definitions\": {},\n  \"properties\": {\n    \"companies\": {\n      \"items\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n\t\t  \t\"minimum\": 0,\n\t\t  \t\"maximum\": 99,\n            \"description\": \"The code of the given company is the unique identifier of the entity.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"maxLength\": 50,\n            \"description\": \"The legal name of the given company.\"\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"name\"\n        ],\n        \"type\": \"object\"\n      },\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"companies\"\n  ],\n  \"type\": \"object\"\n}\n"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#3",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#4",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n\t\"id\": \"82157f46-887e-4907-b7c6-06278b3b9ea1\",\n\t\"message\": \"Welcome and thanks for your request, mike.\"\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#5",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#6",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\r\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n\t\"description\": \"Describes simple greeting representation consisting of an ID and a message.\",\r\n\t\"additionalProperties\": false,\r\n\t\"type\": \"object\",\r\n\t\"required\": [\r\n\t\t\"id\",\r\n\t\t\"message\"\r\n\t],\r\n\t\"properties\": {\r\n\t\t\"id\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"minLength\": 36,\r\n\t\t\t\"maxLength\": 36,\r\n\t\t\t\"description\": \"The ID of the representation, a randomly generated UUID.\"\r\n\t\t},\r\n\t\t\"message\": {\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The text message of the greeting.\"\r\n\t\t}\r\n\t}\r\n}\r\n"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#7",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#8",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"description\": \"Describes the representation of an addition with 1..n summands.\",\n\t\"additionalProperties\": false,\n\t\"definitions\": {\n\t\t\n\t},\n\n\t\"properties\": {\n\t\t\"sum\": {\n\t\t\t\"type\": \"integer\",\n\t\t\t\"description\": \"The result (sum) of the addition.\"\n\t\t},\n\n\t\t\"summands\": {\n\t\t\t\"additionalItems\": false,\n\t\t\t\"items\": {\n\t\t\t\t\"additionalProperties\": false,\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"description\": \"The integer value of the summand.\"\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t\"required\": [\n\t\t\t\t\t\"value\"\n\t\t\t\t],\n\n\t\t\t\t\"type\": \"object\"\n\t\t\t},\n\n\t\t\t\"type\": \"array\"\n\t\t}\n\t},\n\n\t\"required\": [\n\t\t\"summands\",\n\t\t\"sum\"\n\t],\n\n\t\"type\": \"object\"\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#9",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#10",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n\t\"greetings\": [{\n\t\t\"id\": \"1568b2db-9e2f-4025-b7ae-05301901d362\",\n\t\t\"message\": \"Enjoy this wonderful day while the sun is shining on the autumn leaves.\"\n\t\t},\n\t\t{\n\t\t\"id\": \"0bde5b56-bad6-4ed8-9ac6-355587761610\",\n\t\t\"message\": \"Can you hear the waves? Most amazing sound I've ever heard.\"\n    \t},\n\t\t{\n\t\t\"id\": \"57b5673e-73f0-4512-bca1-5255dc6f25b5\",\n\t\t\"message\": \"Mindfulness is one of the secrets for a happy life.\"\n    \t}\n\t]\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#11",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#12",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n\t\"companies\": [{\n\t\t\"code\" : 2,\n\t\t\"name\": \"C & A Mode GmbH & Co. KG, Germany\"\n\t\t},\n\t\t{\n      \t\"code\" : 11,\n\t\t\"name\": \"C & A Nederland\"\n    \t}\n\t]\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#13",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#14",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\r\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n\t\"description\": \"Describes a collection of 0..n simple message representations consisting of an ID and a text.\",\r\n\t\"additionalProperties\": false,\r\n\t\"type\": \"object\",\r\n\t\"required\": [\r\n\t\t\"greetings\"\r\n\t],\r\n\t\"properties\": {\r\n\t\t\"greetings\": {\r\n\t\t\t\"type\": \"array\",\r\n\t\t\t\"description\": \"Holds the collection of simple messages.\",\r\n\t\t\t\"items\": {\r\n\t\t\t\t\"type\": \"object\",\r\n\t\t\t\t\"required\": [\r\n\t\t\t\t\t\"id\",\r\n\t\t\t\t\t\"message\"\r\n\t\t\t\t],\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"id\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"minLength\": 36,\r\n\t\t\t\t\t\t\"maxLength\": 36,\r\n\t\t\t\t\t\t\"description\": \"The ID of the representation, a randomly generated UUID.\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"message\": {\r\n\t\t\t\t\t\t\"type\": \"string\",\r\n\t\t\t\t\t\t\"description\": \"The text of the message.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#15",
"@type": [
"doc:Module",
"doc:Unit"
],
"doc:declares": [
{
"@id": "#24",
"@type": [
"doc:ResourceType",
"doc:AbstractDeclaration",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "ping"
}
],
"doc:dataNode": [
{
"@id": "#25",
"@type": [
"data:Object"
],
"data:description": [
{
"@id": "#26",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Answers the current version of the deployed Mule application, possibly a value like \"2018.6.1\". Your implementation should always return **${muleapp.version.info}**.\n",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#26/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#26"
}
],
"sourcemaps:value": [
{
"@value": "[(6,17)-(8,0)]"
}
]
}
]
}
]
}
],
"data:get": [
{
"@id": "#27",
"@type": [
"data:Object"
],
"data:responses": [
{
"@id": "#28",
"@type": [
"data:Object"
],
"data:200": [
{
"@id": "#29",
"@type": [
"data:Object"
],
"data:body": [
{
"@id": "#30",
"@type": [
"data:Object"
],
"data:text%2Fplain": [
{
"@id": "#31",
"@type": [
"data:Object"
],
"data:example": [
{
"@id": "#32",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "${muleapp.version.info}",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#32/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#32"
}
],
"sourcemaps:value": [
{
"@value": "[(13,23)-(13,46)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#31/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#31"
}
],
"sourcemaps:value": [
{
"@value": "example->[(13,14)-(14,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#31"
}
],
"sourcemaps:value": [
{
"@value": "[(13,0)-(14,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#30/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#30"
}
],
"sourcemaps:value": [
{
"@value": "text%2Fplain->[(12,12)-(14,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#30"
}
],
"sourcemaps:value": [
{
"@value": "[(12,0)-(14,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#29/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#29"
}
],
"sourcemaps:value": [
{
"@value": "body->[(11,10)-(14,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#29"
}
],
"sourcemaps:value": [
{
"@value": "[(11,0)-(14,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#28/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#28"
}
],
"sourcemaps:value": [
{
"@value": "200->[(10,8)-(14,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#28"
}
],
"sourcemaps:value": [
{
"@value": "[(10,0)-(14,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#27/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#27"
}
],
"sourcemaps:value": [
{
"@value": "responses->[(9,6)-(14,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#27"
}
],
"sourcemaps:value": [
{
"@value": "[(9,0)-(14,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#25/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#25"
}
],
"sourcemaps:value": [
{
"@value": "get->[(8,4)-(14,0)]#description->[(6,4)-(8,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#25"
}
],
"sourcemaps:value": [
{
"@value": "[(6,4)-(14,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#24/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#24"
}
],
"sourcemaps:value": [
{
"@value": "[(5,2)-(14,0)]"
}
]
}
]
}
]
},
{
"@id": "#33",
"@type": [
"doc:ResourceType",
"doc:AbstractDeclaration",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "logLevel"
}
],
"doc:dataNode": [
{
"@id": "#34",
"@type": [
"data:Object"
],
"data:description": [
{
"@id": "#35",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Change the severity of a specific logger.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#35/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#35"
}
],
"sourcemaps:value": [
{
"@value": "[(15,19)-(15,60)]"
}
]
}
]
}
]
}
],
"data:put": [
{
"@id": "#36",
"@type": [
"data:Object"
],
"data:body": [
{
"@id": "#37",
"@type": [
"data:Object"
],
"data:application%2Fjson": [
{
"@id": "#38",
"@type": [
"data:Object"
],
"data:example": [
{
"@id": "#39",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "{\n\t\"newLevel\": \"DEBUG\"\n}",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#39/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#39"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
}
]
}
]
}
],
"data:type": [
{
"@id": "#40",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "{\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"title\": \"change  a certain log level\",\n\t\"properties\": {\n\t\t\"newLevel\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"The new log level to be set.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"OFF\",\n\t\t\t\t\"ERROR\",\n\t\t\t\t\"WARN\",\n\t\t\t\t\"INFO\",\n\t\t\t\t\"DEBUG\",\n\t\t\t\t\"TRACE\"\n\t\t\t]\n\t\t},\n\t\t\"createFlag\": {\n\t\t\t\"description\": \"Optional parameter to create a logger in case it does not exist (to avoid typo errors for existing loggers).\",\n\t\t\t\"type\": \"boolean\"\n\t\t},\n\t\t\"hoursToReset\": {\n\t\t\t\"description\": \"Delay in hours after which time the logger is set back to its original log level.\",\n\t\t\t\"type\": \"integer\"\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"newLevel\"\n\t]\n}",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#40/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#40"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#38/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#38"
}
],
"sourcemaps:value": [
{
"@value": "type->[(26,12)-(27,0)]#example->[(25,12)-(26,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#38"
}
],
"sourcemaps:value": [
{
"@value": "[(25,0)-(27,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#37/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#37"
}
],
"sourcemaps:value": [
{
"@value": "application%2Fjson->[(24,10)-(27,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#37"
}
],
"sourcemaps:value": [
{
"@value": "[(24,0)-(27,0)]"
}
]
}
]
}
]
}
],
"data:responses": [
{
"@id": "#41",
"@type": [
"data:Object"
],
"data:200": [
{
"@id": "#42",
"@type": [
"data:Object"
],
"data:body": [
{
"@id": "#43",
"@type": [
"data:Object"
],
"data:application%2Fjson": [
{
"@id": "#44",
"@type": [
"data:Object"
],
"data:description": [
{
"@id": "#45",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Add\n\"#[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)]\"\nto your generated set-payload flow element.\n",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#45/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#45"
}
],
"sourcemaps:value": [
{
"@value": "[(31,29)-(35,0)]"
}
]
}
]
}
]
}
],
"data:example": [
{
"@id": "#46",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "{\n  \"message\" : \"TODO you need to replace this generated setpayload by #[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)] in the api.xml\"\n}",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#46/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#46"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
}
]
}
]
}
],
"data:type": [
{
"@id": "#47",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"description\":\"the human readable result of the changeLogLevel operation.\",\n      \"type\": \"string\"\n    }\n  }\n}",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#47/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#47"
}
],
"sourcemaps:value": [
{
"@value": "[(1,0)-(1,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#44/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#44"
}
],
"sourcemaps:value": [
{
"@value": "type->[(36,16)-(37,0)]#description->[(31,16)-(35,0)]#example->[(35,16)-(36,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#44"
}
],
"sourcemaps:value": [
{
"@value": "[(31,0)-(37,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#43/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#43"
}
],
"sourcemaps:value": [
{
"@value": "application%2Fjson->[(30,14)-(37,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#43"
}
],
"sourcemaps:value": [
{
"@value": "[(30,0)-(37,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#42/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#42"
}
],
"sourcemaps:value": [
{
"@value": "body->[(29,12)-(37,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#42"
}
],
"sourcemaps:value": [
{
"@value": "[(29,0)-(37,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#41/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#41"
}
],
"sourcemaps:value": [
{
"@value": "200->[(28,10)-(37,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#41"
}
],
"sourcemaps:value": [
{
"@value": "[(28,0)-(37,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#36/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#36"
}
],
"sourcemaps:value": [
{
"@value": "responses->[(27,8)-(37,0)]#body->[(23,8)-(27,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#36"
}
],
"sourcemaps:value": [
{
"@value": "[(23,0)-(37,0)]"
}
]
}
]
}
]
}
],
"data:uriParameters": [
{
"@id": "#48",
"@type": [
"data:Object"
],
"data:loggerName": [
{
"@id": "#49",
"@type": [
"data:Object"
],
"data:description": [
{
"@id": "#50",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Name of the logger whose level is to be changed.",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#50/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#50"
}
],
"sourcemaps:value": [
{
"@value": "[(18,23)-(18,71)]"
}
]
}
]
}
]
}
],
"data:example": [
{
"@id": "#51",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "org.apache",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#51/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#51"
}
],
"sourcemaps:value": [
{
"@value": "[(21,19)-(21,31)]"
}
]
}
]
}
]
}
],
"data:required": [
{
"@id": "#52",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "true",
"@type": "xsd:boolean"
}
],
"sourcemaps:sources": [
{
"@id": "#52/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#52"
}
],
"sourcemaps:value": [
{
"@value": "[(20,20)-(20,24)]"
}
]
}
]
}
]
}
],
"data:type": [
{
"@id": "#53",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "string",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#53/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#53"
}
],
"sourcemaps:value": [
{
"@value": "[(19,16)-(19,22)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#49/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#49"
}
],
"sourcemaps:value": [
{
"@value": "required->[(20,10)-(21,0)]#type->[(19,10)-(20,0)]#description->[(18,10)-(19,0)]#example->[(21,10)-(22,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#49"
}
],
"sourcemaps:value": [
{
"@value": "[(18,0)-(22,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#48/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#48"
}
],
"sourcemaps:value": [
{
"@value": "loggerName->[(17,8)-(22,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#48"
}
],
"sourcemaps:value": [
{
"@value": "[(17,0)-(22,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#34/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:data-node-properties": [
{
"sourcemaps:element": [
{
"@value": "amf://id#34"
}
],
"sourcemaps:value": [
{
"@value": "put->[(22,6)-(37,0)]#description->[(15,6)-(16,0)]#uriParameters->[(16,6)-(22,0)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#34"
}
],
"sourcemaps:value": [
{
"@value": "[(15,6)-(37,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#33/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#33"
}
],
"sourcemaps:value": [
{
"@value": "[(14,2)-(37,0)]"
}
]
}
]
}
]
},
{
"@id": "#54",
"@type": [
"security:SecurityScheme",
"doc:DomainElement"
],
"security:name": [
{
"@value": "basicAuth"
}
],
"security:type": [
{
"@value": "Basic Authentication"
}
],
"schema-org:displayName": [
{
"@value": "Basic Authentication"
}
],
"schema-org:description": [
{
"@value": "This API supports Basic Authentication. The client has to provide an \"Authorization\" header with valid credentials."
}
],
"raml-http:header": [
{
"@id": "#55",
"@type": [
"raml-http:Parameter",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "Authorization"
}
],
"raml-http:paramName": [
{
"@value": "Authorization"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"hydra:required": [
{
"@value": true
}
],
"raml-http:binding": [
{
"@value": "header"
}
],
"raml-http:schema": [
{
"@id": "#56",
"@type": [
"raml-shapes:ScalarShape",
"shacl:Shape",
"raml-shapes:Shape",
"doc:DomainElement"
],
"shacl:datatype": [
{
"@id": "http://www.w3.org/2001/XMLSchema#string"
}
],
"shacl:name": [
{
"@value": "schema"
}
],
"schema-org:description": [
{
"@value": "Used to send valid credentials."
}
],
"doc:examples": [
{
"@id": "#57",
"@type": [
"doc:Example",
"doc:DomainElement"
],
"doc:strict": [
{
"@value": true
}
],
"doc:structuredValue": [
{
"@id": "#57",
"@type": [
"data:Scalar"
],
"data:value": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok",
"@type": "xsd:string"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
]
}
]
}
],
"shacl:raw": [
{
"@value": "Basic ax5Gdza5OnJpZnG4Z2ok"
}
],
"sourcemaps:sources": [
{
"@id": "#57/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:synthesized-field": [
{
"sourcemaps:element": [
{
"@value": "doc:strict"
}
],
"sourcemaps:value": [
{
"@value": "true"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "shacl:raw"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "[(47,19)-(47,45)]"
}
]
}
],
"sourcemaps:tracked-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#57"
}
],
"sourcemaps:value": [
{
"@value": "amf://id#55"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#56/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:type-property-lexical-info": [
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(46,14)]"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#56"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "shacl:datatype"
}
],
"sourcemaps:value": [
{
"@value": "[(46,10)-(47,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#55/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(45,10)-(46,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#55"
}
],
"sourcemaps:value": [
{
"@value": "[(44,8)-(48,0)]"
}
]
}
]
}
]
}
],
"hydra:response": [
{
"@id": "#58",
"@type": [
"raml-http:Response",
"doc:DomainElement"
],
"schema-org:name": [
{
"@value": "401"
}
],
"schema-org:description": [
{
"@value": "Credentials are missing or could not be validated by the server."
}
],
"hydra:statusCode": [
{
"@value": "401"
}
],
"sourcemaps:sources": [
{
"@id": "#58/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(50,10)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#58"
}
],
"sourcemaps:value": [
{
"@value": "[(49,8)-(51,0)]"
}
]
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#54/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:declared-element": [
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": ""
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "hydra:response"
}
],
"sourcemaps:value": [
{
"@value": "[(48,6)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:description"
}
],
"sourcemaps:value": [
{
"@value": "[(40,4)-(41,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:type"
}
],
"sourcemaps:value": [
{
"@value": "[(41,4)-(42,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#54"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(51,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "security:name"
}
],
"sourcemaps:value": [
{
"@value": "[(38,2)-(38,11)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "schema-org:displayName"
}
],
"sourcemaps:value": [
{
"@value": "[(39,4)-(40,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "raml-http:header"
}
],
"sourcemaps:value": [
{
"@value": "[(43,6)-(48,0)]"
}
]
}
]
}
]
}
],
"doc:references": [
{
"@id": "#16",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#17",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n\t\"newLevel\": \"DEBUG\"\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#18",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#19",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n  \"message\" : \"TODO you need to replace this generated setpayload by #[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)] in the api.xml\"\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#20",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#21",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"description\":\"the human readable result of the changeLogLevel operation.\",\n      \"type\": \"string\"\n    }\n  }\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
},
{
"@id": "#22",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#23",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n\t\"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\t\"type\": \"object\",\n\t\"title\": \"change  a certain log level\",\n\t\"properties\": {\n\t\t\"newLevel\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"The new log level to be set.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"OFF\",\n\t\t\t\t\"ERROR\",\n\t\t\t\t\"WARN\",\n\t\t\t\t\"INFO\",\n\t\t\t\t\"DEBUG\",\n\t\t\t\t\"TRACE\"\n\t\t\t]\n\t\t},\n\t\t\"createFlag\": {\n\t\t\t\"description\": \"Optional parameter to create a logger in case it does not exist (to avoid typo errors for existing loggers).\",\n\t\t\t\"type\": \"boolean\"\n\t\t},\n\t\t\"hoursToReset\": {\n\t\t\t\"description\": \"Delay in hours after which time the logger is set back to its original log level.\",\n\t\t\t\"type\": \"integer\"\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"newLevel\"\n\t]\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
}
],
"doc:usage": [
{
"@value": "This library defines some common concepts to be used throughout C&A's API specifications.\n"
}
],
"sourcemaps:sources": [
{
"@id": "#15/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:source-vendor": [
{
"sourcemaps:element": [
{
"@value": "amf://id#15"
}
],
"sourcemaps:value": [
{
"@value": "RAML 1.0"
}
]
}
],
"sourcemaps:lexical": [
{
"sourcemaps:element": [
{
"@value": "doc:usage"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(4,0)]"
}
]
},
{
"sourcemaps:element": [
{
"@value": "amf://id#15"
}
],
"sourcemaps:value": [
{
"@value": "[(2,0)-(51,0)]"
}
]
}
]
}
]
},
{
"@id": "#59",
"@type": [
"doc:ExternalFragment",
"doc:Fragment",
"doc:Unit"
],
"doc:encodes": [
{
"@id": "#60",
"@type": [
"doc:ExternalDomainElement",
"doc:DomainElement"
],
"doc:raw": [
{
"@value": "{\n\t\"sum\": 7,\n\t\"summands\": [\n\t\t{\n\t\t\t\"value\": 3\n\t\t},\n\n\t\t{\n\t\t\t\"value\": 4\n\t\t}\n\t]\n}"
}
],
"raml-http:mediaType": [
{
"@value": "application/json"
}
]
}
]
}
],
"sourcemaps:sources": [
{
"@id": "#/source-map",
"@type": [
"sourcemaps:SourceMap"
],
"sourcemaps:aliases-array": [
{
"sourcemaps:element": [
{
"@value": "amf://id"
}
],
"sourcemaps:value": [
{
"@value": "candaCommons->amf://id#15::canda-commons/canda-commons.raml"
}
]
}
]
}
],
"@context": {
"@base": "amf://id",
"raml-http": "http://a.ml/vocabularies/http#",
"raml-shapes": "http://a.ml/vocabularies/shapes#",
"shacl": "http://www.w3.org/ns/shacl#",
"security": "http://a.ml/vocabularies/security#",
"rdfs": "http://www.w3.org/2000/01/rdf-schema#",
"data": "http://a.ml/vocabularies/data#",
"doc": "http://a.ml/vocabularies/document#",
"rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
"sourcemaps": "http://a.ml/vocabularies/document-source-maps#",
"schema-org": "http://schema.org/",
"xsd": "http://www.w3.org/2001/XMLSchema#",
"hydra": "http://www.w3.org/ns/hydra/core#"
}
}
]
