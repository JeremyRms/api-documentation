/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   api-documentation.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../raml-aware/raml-aware.d.ts" />
/// <reference path="../api-method-documentation/api-method-documentation.d.ts" />
/// <reference path="../api-endpoint-documentation/api-endpoint-documentation.d.ts" />
/// <reference path="../api-type-documentation/api-type-documentation.d.ts" />
/// <reference path="../api-documentation-document/api-documentation-document.d.ts" />
/// <reference path="../api-summary/api-summary.d.ts" />
/// <reference path="../api-security-documentation/api-security-documentation.d.ts" />
/// <reference path="../amf-helper-mixin/amf-helper-mixin.d.ts" />

declare namespace ApiElements {

  /**
   * `api-documentation`
   *
   * A main documentation view for AMF model.
   *
   * This element works with [AMF](https://github.com/mulesoft/amf) data model.
   *
   * It works well with `api-navigation` component. When `handle-navigation-events`
   * is set it listens for selection events dispatched by the navigation.
   *
   * To manually steare the behavior of the component you have to set both:
   * - selected
   * - selectedType
   *
   * Selected is an `@id` of the AMF data model in json/ld representation.
   * Selected type tells the component where to look for the data and which
   * view to render.
   *
   * The component handles data computation on selection change.
   *
   * ## Updating API's base URI
   *
   * By default the component render the documentation as it is defined
   * in the AMF model. Sometimes, however, you may need to replace the base URI
   * of the API with something else. It is useful when the API does not
   * have base URI property defined (therefore this component render relative
   * paths instead of URIs) or when you want to manage different environments.
   *
   * To update base URI value either update `baseUri` property or use
   * `iron-meta` with key `ApiBaseUri`. First method is easier but the second
   * gives much more flexibility since it use a [monostate pattern](http://wiki.c2.com/?MonostatePattern)
   * to manage base URI property.
   *
   * When the component constructs the funal URI for the endpoint it does the following:
   * - if `baseUri` is set it uses this value as a base uri for the endpoint
   * - else if `iron-meta` with key `ApiBaseUri` exists and contains a value
   * it uses it uses this value as a base uri for the endpoint
   * - else if `amfModel` is set then it computes base uri value from main
   * model document
   * Then it concatenates computed base URI with `endpoint`'s path property.
   *
   * ### Example
   *
   * ```html
   * <iron-meta key="ApiBaseUri" value="https://domain.com"></iron-meta>
   * ```
   *
   * To update value of the `iron-meta`:
   * ```javascript
   * new Polymer.IronMeta({key: 'ApiBaseUri'}).value = 'https://other.domain';
   * ```
   *
   * Note: The element will not get notified about the change in `iron-meta`.
   * The change will be reflected whehn `amfModel` or `endpoint` property chnage.
   *
   * ## Styling
   *
   * `<api-documentation>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--api-documentation` | Mixin applied to this elment | `{}`
   */
  class ApiDocumentation extends
    ApiElements.AmfHelperMixin(
    Polymer.Element) {

    /**
     * `raml-aware` scope property to use.
     */
    aware: string|null|undefined;

    /**
     * A model's `@id` of selected documentation part.
     * Special case is for `summary` view. It's not part of an API
     * but most applications has some kind of summary view for the
     * API.
     */
    selected: string|null|undefined;

    /**
     * Type of the selected item.
     * One of `documentation`, `type`, `security`, `endpoint`, `method`
     * or `summary`.
     */
    selectedType: string|null|undefined;

    /**
     * By default application hosting the element must set `selected` and
     * `selectedType` properties. When using `api-navigation` element
     * by setting this property the element listens for navigation events
     * and updates the state
     */
    handleNavigationEvents: boolean|null|undefined;

    /**
     * True if currently selection is endpoint
     */
    readonly isEndpoint: boolean|null|undefined;

    /**
     * True if currently selection is method
     */
    readonly isMethod: boolean|null|undefined;

    /**
     * True if currently selection is documentation
     */
    readonly isDoc: boolean|null|undefined;

    /**
     * True if currently selection is type
     */
    readonly isType: boolean|null|undefined;

    /**
     * True if currently selection is security
     */
    readonly isSecurity: boolean|null|undefined;

    /**
     * True if currently selection is summary
     */
    readonly isSummary: boolean|null|undefined;

    /**
     * Computed value of AMF model of a type of `http://schema.org/WebAPI`
     */
    readonly webApi: object|null;

    /**
     * Computed value of `declares` part of the AMF model
     */
    readonly declares: Array<object|null>|null;

    /**
     * Computed value of `references` part of the AMF model
     */
    readonly references: Array<object|null>|null;

    /**
     * A property to set to override AMF's model base URI information.
     */
    baseUri: string|null|undefined;

    /**
     * Passing value of `noTryIt` to the method documentation.
     * Hiddes "Try it" button.
     */
    noTryIt: boolean|null|undefined;

    /**
     * If set it will renders the view in the narrow layout.
     */
    narrow: boolean|null|undefined;

    /**
     * Scroll target used to observe `scroll` event.
     * It is passed to `api-endpoint-documentation` element.
     */
    scrollTarget: object|null|undefined;
    disconnectedCallback(): void;

    /**
     * Registers `api-navigation-selection-changed` event listener handler
     * on window object.
     */
    _registerNavigationEvents(): void;

    /**
     * Removes event listener from window object for
     * `api-navigation-selection-changed` event.
     */
    _unregisterNavigationEvents(): void;

    /**
     * Registers / unregisters event listeners depending on `state`
     */
    _handleNavChanged(state: Boolean|null): void;

    /**
     * Handler for `api-navigation-selection-changed` event.
     */
    _navigationHandler(e: CustomEvent|null): void;

    /**
     * Handles navigation change, computes model for the view and finally
     * renders the view.
     */
    _navigationOccured(selectedType: String|null): void;
    _computeEndpointLink(item: any): any;
    _computeEndpointPrevious(webApi: any, selected: any): any;
    _computeEndpointNext(webApi: any, selected: any): any;

    /**
     * Computes model for endpoint for method documentation.
     *
     * @param webApi Current value of `webApi` property
     * @param selected Selected shape
     * @returns An endponit definition
     */
    _computeMethodEndpointModel(webApi: object|null, selected: String|null): object|null;
    _computeMethodLink(item: any): any;
    _computeMethodPrevious(webApi: any, selected: any): any;
    _computeMethodNext(webApi: any, selected: any): any;
  }
}

interface HTMLElementTagNameMap {
  "api-documentation": ApiElements.ApiDocumentation;
}
